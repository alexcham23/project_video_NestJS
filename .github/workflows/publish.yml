name: publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          #cache: 'pnpm'

      - run: corepack disable

      - name: verify working directory
        run: echo "Working directory is ${{github.repository}}/project_nest-js/"

      - name: Install NPM Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./project_nest-js

      - name: Run Tests
        run: pnpm test
        working-directory: ./project_nest-js
  create-image-nest:
    needs: run-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_CD_CI }}

      - name: Build the Docker image
        run: |
          docker build -t ghcr.io/alexcham23/nestjs-curso:latest projec_nest-js
          docker push ghcr.io/alexcham23/nestjs-curso:latest

  deploy-nest:
    needs: create-image-nest
    runs-on: ubuntu-latest

    steps:
      - name: install ssh
        run: sudo apt-get install sshpass
      #- name: Setup SSH Key ðŸ”‘
      #  uses: webfactory/ssh-agent@v0.9.0
      #  with:
      #    ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      #- name: Copiar docker-compose.yml al servidor
      #  run: |
      #    sshpass -p ${{ secrets.AUTH_PASS }} scp -o StrictHostKeyChecking=no project_nest-js/docker-compose-prod.yml ${{ secrets.AUTH_SERVER }}:/home/deploy/app/
      - name: SSH into Server and Deploy ðŸš€
        run: |
          sshpass -p ${{secrets.AUTH_PASS}} ssh -o StrictHostKeyChecking=no ${{secrets.AUTH_SERVER}} << EOF

            echo "ðŸ“Œ Conectado al servidor. Comenzando despliegue..."

            echo "ðŸ›‘ Deteniendo contenedor anterior si existe..."
            docker stop nestjs_api || true

            echo "ðŸ§¹ Eliminando imagen anterior..."
            docker rmi -f nestjs_api || true

            echo "ðŸ”‘ Iniciando sesiÃ³n en el registro de GitHub..."
            docker login ghcr.io -u ${{ secrets.SSH_USER }} -p ${{ secrets.TOKEN_CD_CI }}

            echo "ðŸ“¦ Descargando nueva imagen..."
            docker pull ghcr.io/alexcham23/nestjs-curso:latest

            echo "ðŸš€ Levantando servicio con Docker "
            docker run -d \
              --name nestjs_api \
              -p 5000:5000 \
              --restart always \
              -e JWT_SECRET='${{secrets.ENV_JWT_SECRET}}' \
              -e DB_URI='${{secrets.ENV_DB_URI}}' \
              -e MAIL_SECURE='${{secrets.ENV_MAIL_SECURE}}' \
              -e MAIL_PORT='${{secrets.ENV_MAIL_PORT}}' \
              -e MAIL_FROM='${{secrets.ENV_MAIL_FROM}}' \
              -e MAIL_USER='${{secrets.ENV_MAIL_USER}}' \
              -e MAIL_PASSWORD='${{secrets.ENV_MAIL_PASSWORD}}' \
              ghcr.io/alexcham23/nestjs-curso:latest

            echo "âœ… Despliegue completado exitosamente."
          EOF